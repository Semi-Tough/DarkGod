//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class TaskRewardConfig :  Bright.Config.BeanBase 
{
    public TaskRewardConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["taskName"].IsString) { throw new SerializationException(); }  TaskName = _json["taskName"]; }
        { if(!_json["count"].IsNumber) { throw new SerializationException(); }  Count = _json["count"]; }
        { if(!_json["exp"].IsNumber) { throw new SerializationException(); }  Exp = _json["exp"]; }
        { if(!_json["coin"].IsNumber) { throw new SerializationException(); }  Coin = _json["coin"]; }
        PostInit();
    }

    public TaskRewardConfig(int id, string taskName, int count, int exp, int coin ) 
    {
        this.Id = id;
        this.TaskName = taskName;
        this.Count = count;
        this.Exp = exp;
        this.Coin = coin;
        PostInit();
    }

    public static TaskRewardConfig DeserializeTaskRewardConfig(JSONNode _json)
    {
        return new TaskRewardConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 任务名称
    /// </summary>
    public string TaskName { get; private set; }
    /// <summary>
    /// 需要完成次数
    /// </summary>
    public int Count { get; private set; }
    /// <summary>
    /// 奖励经验值
    /// </summary>
    public int Exp { get; private set; }
    /// <summary>
    /// 奖励金币
    /// </summary>
    public int Coin { get; private set; }

    public const int __ID__ = -1921905258;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "TaskName:" + TaskName + ","
        + "Count:" + Count + ","
        + "Exp:" + Exp + ","
        + "Coin:" + Coin + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
