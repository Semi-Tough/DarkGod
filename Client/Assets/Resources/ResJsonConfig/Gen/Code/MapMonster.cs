//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class MapMonster :  Bright.Config.BeanBase 
{
    public MapMonster(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["wave"].IsNumber) { throw new SerializationException(); }  Wave = _json["wave"]; }
        { if(!_json["monsterId"].IsNumber) { throw new SerializationException(); }  MonsterId = _json["monsterId"]; }
        { var _json2 = _json["bornPos"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  BornPos = new UnityEngine.Vector3(__x, __y,__z); }
        { if(!_json["bornRotY"].IsNumber) { throw new SerializationException(); }  BornRotY = _json["bornRotY"]; }
        { if(!_json["level"].IsNumber) { throw new SerializationException(); }  Level = _json["level"]; }
        PostInit();
    }

    public MapMonster(int id, int wave, int monsterId, UnityEngine.Vector3 bornPos, float bornRotY, int level ) 
    {
        this.Id = id;
        this.Wave = wave;
        this.MonsterId = monsterId;
        this.BornPos = bornPos;
        this.BornRotY = bornRotY;
        this.Level = level;
        PostInit();
    }

    public static MapMonster DeserializeMapMonster(JSONNode _json)
    {
        return new MapMonster(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 波数
    /// </summary>
    public int Wave { get; private set; }
    /// <summary>
    /// 怪物类型
    /// </summary>
    public int MonsterId { get; private set; }
    /// <summary>
    /// 初始位置
    /// </summary>
    public UnityEngine.Vector3 BornPos { get; private set; }
    /// <summary>
    /// 初始朝向
    /// </summary>
    public float BornRotY { get; private set; }
    /// <summary>
    /// 等级
    /// </summary>
    public int Level { get; private set; }

    public const int __ID__ = -948529410;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Wave:" + Wave + ","
        + "MonsterId:" + MonsterId + ","
        + "BornPos:" + BornPos + ","
        + "BornRotY:" + BornRotY + ","
        + "Level:" + Level + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
