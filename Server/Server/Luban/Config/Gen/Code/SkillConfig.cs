//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg
{

public sealed partial class SkillConfig :  Bright.Config.BeanBase 
{
    public SkillConfig(JsonElement _json) 
    {
        Id = _json.GetProperty("id").GetInt32();
        SkillName = _json.GetProperty("skillName").GetString();
        CdTime = _json.GetProperty("cdTime").GetInt32();
        SkillTime = _json.GetProperty("skillTime").GetInt32();
        AniAction = _json.GetProperty("aniAction").GetInt32();
        FxName = _json.GetProperty("fxName").GetString();
        IsCombo = _json.GetProperty("isCombo").GetInt32();
        IsCollide = _json.GetProperty("isCollide").GetInt32();
        IsBreak = _json.GetProperty("isBreak").GetInt32();
        DmgType = _json.GetProperty("dmgType").GetInt32();
        { var __json0 = _json.GetProperty("skillMoveList"); int _n0 = __json0.GetArrayLength(); SkillMoveList = new int[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  SkillMoveList[__index0++] = __v0; }   }
        { var __json0 = _json.GetProperty("skillRangeList"); int _n0 = __json0.GetArrayLength(); SkillRangeList = new int[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  SkillRangeList[__index0++] = __v0; }   }
        { var __json0 = _json.GetProperty("skillDamageLst"); int _n0 = __json0.GetArrayLength(); SkillDamageLst = new int[_n0]; int __index0=0; foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  SkillDamageLst[__index0++] = __v0; }   }
        PostInit();
    }

    public SkillConfig(int id, string skillName, int cdTime, int skillTime, int aniAction, string fxName, int isCombo, int isCollide, int isBreak, int dmgType, int[] skillMoveList, int[] skillRangeList, int[] skillDamageLst ) 
    {
        this.Id = id;
        this.SkillName = skillName;
        this.CdTime = cdTime;
        this.SkillTime = skillTime;
        this.AniAction = aniAction;
        this.FxName = fxName;
        this.IsCombo = isCombo;
        this.IsCollide = isCollide;
        this.IsBreak = isBreak;
        this.DmgType = dmgType;
        this.SkillMoveList = skillMoveList;
        this.SkillRangeList = skillRangeList;
        this.SkillDamageLst = skillDamageLst;
        PostInit();
    }

    public static SkillConfig DeserializeSkillConfig(JsonElement _json)
    {
        return new SkillConfig(_json);
    }

    /// <summary>
    /// 技能id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 技能名
    /// </summary>
    public string SkillName { get; private set; }
    /// <summary>
    /// 冷却时间（毫秒）
    /// </summary>
    public int CdTime { get; private set; }
    /// <summary>
    /// 技能时间（毫秒）技能行为
    /// </summary>
    public int SkillTime { get; private set; }
    public int AniAction { get; private set; }
    /// <summary>
    /// 技能特效名称
    /// </summary>
    public string FxName { get; private set; }
    /// <summary>
    /// 是否是连招1true、0false
    /// </summary>
    public int IsCombo { get; private set; }
    /// <summary>
    /// 技能是否碰撞1true、0false
    /// </summary>
    public int IsCollide { get; private set; }
    /// <summary>
    /// 技能是否可以打断1true、0false
    /// </summary>
    public int IsBreak { get; private set; }
    /// <summary>
    /// 伤害类型，1物理、2法术
    /// </summary>
    public int DmgType { get; private set; }
    /// <summary>
    /// 技能移动列表
    /// </summary>
    public int[] SkillMoveList { get; private set; }
    /// <summary>
    /// 技能行为列表
    /// </summary>
    public int[] SkillRangeList { get; private set; }
    /// <summary>
    /// 技能伤害列表
    /// </summary>
    public int[] SkillDamageLst { get; private set; }

    public const int __ID__ = -844226349;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillName:" + SkillName + ","
        + "CdTime:" + CdTime + ","
        + "SkillTime:" + SkillTime + ","
        + "AniAction:" + AniAction + ","
        + "FxName:" + FxName + ","
        + "IsCombo:" + IsCombo + ","
        + "IsCollide:" + IsCollide + ","
        + "IsBreak:" + IsBreak + ","
        + "DmgType:" + DmgType + ","
        + "SkillMoveList:" + Bright.Common.StringUtil.CollectionToString(SkillMoveList) + ","
        + "SkillRangeList:" + Bright.Common.StringUtil.CollectionToString(SkillRangeList) + ","
        + "SkillDamageLst:" + Bright.Common.StringUtil.CollectionToString(SkillDamageLst) + ","
        + "}";
    }

    partial void PostInit();
    partial void PostResolve();
}
}
